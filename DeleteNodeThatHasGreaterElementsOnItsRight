# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNodes(self, head: Optional[ListNode]) -> Optional[ListNode]:
        current = head
        temp = list()
        while current:
            temp.append(current.val)
            current = current.next
        temp = temp[-1::-1]
        current = head
        for value in temp:
            current.val = value
            current = current.next
        current = head
        while current.next:
            if current.next.val<current.val:
                current.next = current.next.next
            else:
                current = current.next
        temp = []
        current = head
        while current:
            temp.append(current.val)
            current = current.next
        temp = temp[-1::-1]
        current = head
        for value in temp:
            current.val = value
            current = current.next
        return head
        
